/*====================================================

【TypeScript入門 #7】オブジェクトの型注釈は何が正解か？インデックスシグネチャ、Record、Object...

====================================================*/

/*====================================================

空オブジェクトの型付け

====================================================*/

// let obj1: {} = {};
// let obj2: object = {};
// let obj3: Record<string, unknown> = {};
// let obj4: { [key: string]: unknown } = {};

/*====================================================

Recordとインデックスシグネチャの型注釈

====================================================*/

// let obj3: Record<string, unknown> = {};
// let obj4: { [key: string]: unknown } = {};

// obj3.foo = "bar";
// obj4.foo = "bar";

/*====================================================

プロパティーがある場合の型注釈

====================================================*/

// let obj3: Record<string, unknown> = {
//   a: 1,
//   b: "foo",
// };
// let obj4: { [key: string]: unknown } = {
//   a: 1,
//   b: "foo",
// };

/*====================================================

Recordよりインデックスシグネチャが良い理由

====================================================*/

// let obj3: Record<string, unknown> = {
//   a: 1,
//   b: "foo",
// };
// let obj4: { a: number; b: string; foo?: string } = {
//   a: 1,
//   b: "foo",
//   foo: "bar",
// };

/*====================================================

オブジェクトがネストするパターン

====================================================*/

// let obj3: Record<string, Record<string, unknown>> = {
//   a: {
//     foo: "bar",
//   },
// };
// let obj4: { [key: string]: { foo: unknown } } = {
//   a: {
//     foo: "bar",
//   },
// };
