//【Genericsの基礎を完全理解。初期値やextendsによる型制約のパターンを攻略しよう！】

// export type Foo<T> = {
//   value: T;
// };

// const foo1: Foo<string> = {
//   value: "",
// };

// const foo2: Foo<number> = {
//   value: 1,
// };

// const foo3: Foo<boolean> = {
//   value: true,
// };

// export type User<T> = {
//   name: string;
//   state: T;
// };

// type japanese = User<"東京都" | "大阪府">;
// type American = User<"CA" | "NY">;

// const user1: japanese = {
//   name: "田中",
//   state: "東京都",
// };
// const user2: American = {
//   name: "jonny",
//   state: "CA",
// };

//========================================================================================================================================================================================================================================================================================================================================初期値について========================================================================================================================================================================================================================================================================================================================================
//

// export type Bar<T = number> = {
//   value: T;
// };

// const bar1: Bar = {
//   value: 1,
// };

// const bar2: Bar<number> = {
//   value: 11,
// };

// const bar3: Bar<string> = {
//   value: "",
// };

//========================================================================================================================================================================================================================================================================================================================================genericsの引数を制限したい時========================================================================================================================================================================================================================================================================================================================================
//

// export type Bar<T extends string | number> = {
//   value: T;
// };

// const bar1: Bar<"bar"> = {
//   value: "bar",
// };

// const bar2: Bar<number> = {
//   value: 11,
// };

// const bar3: Bar<string> = {
//   value: "",
// };

//========================================================================================================================================================================================================================================================================================================================================genericsの引数を制限したい時 + 初期値加える========================================================================================================================================================================================================================================================================================================================================
//

// export type Bar<T extends string | number = string> = {
//   value: T;
// };

// const bar1: Bar<"bar"> = {
//   value: "bar",
// };

// const bar2: Bar<number> = {
//   value: 11,
// };

// const bar3: Bar<string> = {
//   value: "",
// };
